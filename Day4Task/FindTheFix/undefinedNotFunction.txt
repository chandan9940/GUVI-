===============TypeError: 'undefined' is not a function.=================

This is an error that occurs in Chrome when you call an undefined function. 
You can test this in the Chrome Developer Console and Mozilla Firefox Developer Console.

As JavaScript coding techniques and design patterns have become increasingly sophisticated 
over the years, there’s been a corresponding increase in the proliferation of self-referencing 
scopes within callbacks and closures, which are a fairly common source of this/that confusion.

Consider this example code snippet:

function clearBoard(){
  alert("Cleared");
}

document.addEventListener("click", function(){
  this.clearBoard(); // what is “this” ?
});

If you execute the above code and then click on the page, it results in the following error 
"Uncaught TypeError: this.clearBoard is not a function". The reason is that the anonymous 
function being executed is in the context of the document, whereas clearBoard is defined on 
the window.

A traditional, old-browser-compliant solution is to simply save your reference to this in a 
variable that can then be inherited by the closure. For example:
var self=this;  // save reference to 'this', while it's still this!
document.addEventListener("click", function(){
  self.clearBoard();
});

Alternatively, in the newer browsers, you can use the bind() 
method to pass the proper reference:

document.addEventListener("click",this.clearBoard.bind(this));